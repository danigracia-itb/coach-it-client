import{u as r,f as c,g as i,E as a,M as s,A as u,B as m}from"./index-0768fb48.js";const f={getAthletes:async()=>{const e=r(),o=c(),t=i();t.setLoading(!0);try{const n=await a.get("coach/get-athletes/"+e.user.id);t.setLoading(!1),t.setError(!1),o.setAthletes(n.data)}catch(n){console.log(n),t.setLoading(!1),t.setError(!0)}},deleteAthlete:async e=>{const o=c();s.fire({title:"¿Do you want to delete this athlete?",text:"Once deleted, it cannot be recovered",icon:"warning",showCancelButton:!0,confirmButtonColor:"#711bba",cancelButtonColor:"#d33",confirmButtonText:"Yes",cancelButtonText:"No"}).then(t=>{t.isConfirmed&&a.delete(`/athlete/${e}`).then(()=>{console.log(),s.fire({title:"Athlete deleted",text:"Athlete deleted successfully",icon:"success"}),o.deleteAthlete(e)}).catch(n=>{s.fire({title:"Error 505!",text:"Server error, contact with webmaster for more info",icon:"error"})})})},sendPaymentReminder:async e=>{const o=i(),t=r(),n=e.payments[e.payments.length-1].payment_type;o.setLoading(!0);try{await a.post("send-payment-reminder",{athlete_email:e.email,athlete_name:e.name,coach:t.user.name,date:u(e.payments[e.payments.length-1].date,m(n)),quantity:e.payments[e.payments.length-1].quantity,payment_type:n}),o.setLoading(!1),s.fire({title:"Sended Successfully",text:`Payment reminder sent successfully to ${e.name} for an amount of ${e.payments[0].quantity}€ `,showCancelButton:!0,confirmButtonText:"Confirm",confirmButtonColor:"#711bba"})}catch(l){o.setLoading(!1),console.log(l)}}};export{f as c};
